@page "/blog-posts/{BlogId:int}"
@using BlogApp.BlazorServer.Models
@using BlogApp.BlazorServer.Services
@using Microsoft.AspNetCore.Mvc
@inject PostService PostService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<h3>Posts of Blog @BlogId</h3>

<button @onclick="CreatePost">Create Post</button>

@if (posts != null && posts.Any())
{
    <table class="table">
        <thead>
        <tr>
            <th>Post Title</th>
            <th>Publish Date</th>
            <th>Tags</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var post in posts)
        {
            <tr>
                <td><a href="/post-details/@post.PostId/@BlogId">@post.PostTitle</a></td>
                <td>@post.PublishDate.ToString("yyyy-MM-dd")</td>
                <td>
                    @foreach (var tag in post.Tags)
                    {
                        <span class="tag">@tag.Name</span>
                    }
                </td>
                <td>
                    <a href="/edit-post/@post.PostId">Edit</a>
                    <button @onclick="() => ConfirmDelete(post.PostId)">Delete</button>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public int BlogId { get; set; }
    private IEnumerable<PostDto> posts;

    protected override async Task OnInitializedAsync()
    {
        posts = await PostService.GetPostsByBlogIdWithTags(BlogId);
    }

    private async Task ConfirmDelete(int postId)
    {
        bool confirmed = await JSRuntime.InvokeAsync<bool>("confirm", $"Are you sure you want to delete post {postId}?");
        if (confirmed)
        {
            await DeletePost(postId);
        }
    }

    private async Task DeletePost(int postId)
    {
        await PostService.DeletePost(postId);
        posts = await PostService.GetPostsByBlogIdWithTags(BlogId);
    }

    private void CreatePost()
    {
        NavigationManager.NavigateTo($"/create-post/{BlogId}");
    }
}