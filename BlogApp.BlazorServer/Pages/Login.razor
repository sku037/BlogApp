@page "/login"
@using BlogApp.BlazorServer.Models
@using Microsoft.AspNetCore.WebUtilities
@inject AuthService AuthService
@inject NavigationManager NavigationManager

<h3>Login</h3>

@if (!string.IsNullOrWhiteSpace(loginError))
{
    <div class="alert alert-danger" role="alert">
        @loginError
    </div>
}

<EditForm Model="@loginModel" OnValidSubmit="@HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="username">Username:</label>
        <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" class="form-control" @bind-Value="loginModel.Password" type="password" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@code {
    private LoginModel loginModel = new LoginModel();
    private string loginError;
    private string returnUrl = "/";

    protected override void OnInitialized()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("returnUrl", out var url))
        {
            returnUrl = url.FirstOrDefault();
        }
    }

    private async Task HandleLogin()
    {
        var result = await AuthService.Login(loginModel);
        if (result)
        {
            NavigationManager.NavigateTo(returnUrl);
        }
        else
        {
            loginError = "Login failed. Please check your username and password.";
        }
    }
}
