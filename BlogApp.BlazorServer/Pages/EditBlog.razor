@page "/edit-blog/{BlogId:int}"
@inject BlogService BlogService
@inject NavigationManager NavigationManager
@inject IAuthorizationService AuthorizationService
@using BlogApp.BlazorServer.Models
@using BlogApp.BlazorServer.Services
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider

<h3>Edit Blog</h3>

@if (authorizationResult?.Succeeded ?? false)
{
    <EditForm Model="@blogEditDto" OnValidSubmit="@HandleSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="title">Title:</label>
            <InputText id="title" class="form-control" @bind-Value="blogEditDto.Title" />
        </div>

        <div class="form-group">
            <label for="description">Description:</label>
            <InputTextArea id="description" class="form-control" @bind-Value="blogEditDto.Description" />
        </div>

        <button type="submit" class="btn btn-success">Save Changes</button>
    </EditForm>
}
else if (authorizationResult?.Succeeded == false)
{
    <p>You are not authorized to edit this blog.</p>
}
else
{
    <p>Loading...</p>
}

@code {
    [Parameter]
    public int BlogId { get; set; }
    private BlogEditDto blogEditDto = new BlogEditDto();
    private Blog originalBlog;
    private AuthorizationResult? authorizationResult;

    protected override async Task OnInitializedAsync()
    {
        originalBlog = await BlogService.GetBlog(BlogId);
        blogEditDto.Title = originalBlog.Title;
        blogEditDto.Description = originalBlog.Description;
        blogEditDto.Username = originalBlog.User?.UserName;

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        authorizationResult = await AuthorizationService.AuthorizeAsync(user, blogEditDto, "IsResourceOwner");
    }

    private async Task HandleSubmit()
    {
        if (authorizationResult?.Succeeded == true)
        {
            await BlogService.UpdateBlog(BlogId, blogEditDto);
            NavigationManager.NavigateTo("/");
        }
    }
}
